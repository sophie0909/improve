<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.micro.service.service1.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.micro.service.service1.entity.User">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_account" jdbcType="VARCHAR" property="userAccount" />
    <result column="pass_word" jdbcType="VARCHAR" property="passWord" />
    <result column="staff_code" jdbcType="VARCHAR" property="staffCode" />
    <result column="staff_email" jdbcType="VARCHAR" property="staffEmail" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="user_source" jdbcType="INTEGER" property="userSource" />
    <result column="enable_status" jdbcType="TINYINT" property="enableStatus" />
    <result column="create_id" jdbcType="BIGINT" property="createId" />
    <result column="update_id" jdbcType="BIGINT" property="updateId" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_account, pass_word, staff_code, staff_email, user_name, create_time, update_time, 
    user_source, enable_status, create_id, update_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.micro.service.service1.entity.User">
    insert into user (id, user_account, pass_word, 
      staff_code, staff_email, user_name, 
      create_time, update_time, user_source, 
      enable_status, create_id, update_id
      )
    values (#{id,jdbcType=BIGINT}, #{userAccount,jdbcType=VARCHAR}, #{passWord,jdbcType=VARCHAR}, 
      #{staffCode,jdbcType=VARCHAR}, #{staffEmail,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{userSource,jdbcType=INTEGER}, 
      #{enableStatus,jdbcType=TINYINT}, #{createId,jdbcType=BIGINT}, #{updateId,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.micro.service.service1.entity.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userAccount != null">
        user_account,
      </if>
      <if test="passWord != null">
        pass_word,
      </if>
      <if test="staffCode != null">
        staff_code,
      </if>
      <if test="staffEmail != null">
        staff_email,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="userSource != null">
        user_source,
      </if>
      <if test="enableStatus != null">
        enable_status,
      </if>
      <if test="createId != null">
        create_id,
      </if>
      <if test="updateId != null">
        update_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userAccount != null">
        #{userAccount,jdbcType=VARCHAR},
      </if>
      <if test="passWord != null">
        #{passWord,jdbcType=VARCHAR},
      </if>
      <if test="staffCode != null">
        #{staffCode,jdbcType=VARCHAR},
      </if>
      <if test="staffEmail != null">
        #{staffEmail,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userSource != null">
        #{userSource,jdbcType=INTEGER},
      </if>
      <if test="enableStatus != null">
        #{enableStatus,jdbcType=TINYINT},
      </if>
      <if test="createId != null">
        #{createId,jdbcType=BIGINT},
      </if>
      <if test="updateId != null">
        #{updateId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.micro.service.service1.entity.User">
    update user
    <set>
      <if test="userAccount != null">
        user_account = #{userAccount,jdbcType=VARCHAR},
      </if>
      <if test="passWord != null">
        pass_word = #{passWord,jdbcType=VARCHAR},
      </if>
      <if test="staffCode != null">
        staff_code = #{staffCode,jdbcType=VARCHAR},
      </if>
      <if test="staffEmail != null">
        staff_email = #{staffEmail,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userSource != null">
        user_source = #{userSource,jdbcType=INTEGER},
      </if>
      <if test="enableStatus != null">
        enable_status = #{enableStatus,jdbcType=TINYINT},
      </if>
      <if test="createId != null">
        create_id = #{createId,jdbcType=BIGINT},
      </if>
      <if test="updateId != null">
        update_id = #{updateId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.micro.service.service1.entity.User">
    update user
    set user_account = #{userAccount,jdbcType=VARCHAR},
      pass_word = #{passWord,jdbcType=VARCHAR},
      staff_code = #{staffCode,jdbcType=VARCHAR},
      staff_email = #{staffEmail,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      user_source = #{userSource,jdbcType=INTEGER},
      enable_status = #{enableStatus,jdbcType=TINYINT},
      create_id = #{createId,jdbcType=BIGINT},
      update_id = #{updateId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>